name: Checks
on: [push]
jobs:
  build-test:
    strategy:
      matrix:
        os:
          - windows-2022
          - ubuntu-22.04
        compiler:
          - gcc-13
          - msvc
        exclude:
          - os: ubuntu-22.04
            compiler: msvc
          - os: windows-2022
            compiler: gcc-13
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Setup C++
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          conan: '2.0.14'

      - name: Build and test (Windows)
        if: runner.os == 'Windows'
        run: cmake --workflow --preset ci-windows-vs2022-cl-ninja-test

      - name: Build and test (Linux)
        if: runner.os != 'Windows'
        run: cmake --workflow --preset ci-linux-gcc-ninja-test

  static-analysis:
    strategy:
      matrix:
        check: [clang-tidy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Setup C++
        uses: aminya/setup-cpp@v1
        with:
          compiler: llvm-17
          cmake: true
          ninja: true
          conan: '2.0.14'
          clangtidy: true 
      - run: cmake --workflow --preset ci-check-${{ matrix.check }}

  sanitize:
    strategy:
      matrix:
        sanitizer: [ub, address, leak, thread]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Setup C++
        uses: aminya/setup-cpp@v1
        with:
          compiler: llvm-17
          cmake: true
          ninja: true
          conan: '2.0.14'
      - run: cmake --workflow --preset ci-sanitize-${{ matrix.sanitizer }}
